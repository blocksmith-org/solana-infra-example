// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.27.3
// source: proto/api.proto

package solgateway

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// common
type SendTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction   string `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	SkipPreFlight bool   `protobuf:"varint,2,opt,name=skipPreFlight,proto3" json:"skipPreFlight,omitempty"`
	OpenPlatform  string `protobuf:"bytes,3,opt,name=openPlatform,proto3" json:"openPlatform,omitempty"` //jito|bloxroute|nextblock|temporal
}

func (x *SendTransactionRequest) Reset() {
	*x = SendTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionRequest) ProtoMessage() {}

func (x *SendTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionRequest.ProtoReflect.Descriptor instead.
func (*SendTransactionRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{0}
}

func (x *SendTransactionRequest) GetTransaction() string {
	if x != nil {
		return x.Transaction
	}
	return ""
}

func (x *SendTransactionRequest) GetSkipPreFlight() bool {
	if x != nil {
		return x.SkipPreFlight
	}
	return false
}

func (x *SendTransactionRequest) GetOpenPlatform() string {
	if x != nil {
		return x.OpenPlatform
	}
	return ""
}

type SendTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *SendTransactionResponse) Reset() {
	*x = SendTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionResponse) ProtoMessage() {}

func (x *SendTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionResponse.ProtoReflect.Descriptor instead.
func (*SendTransactionResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{1}
}

func (x *SendTransactionResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type SubscribePumpFunCreateStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribePumpFunCreateStreamRequest) Reset() {
	*x = SubscribePumpFunCreateStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribePumpFunCreateStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePumpFunCreateStreamRequest) ProtoMessage() {}

func (x *SubscribePumpFunCreateStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePumpFunCreateStreamRequest.ProtoReflect.Descriptor instead.
func (*SubscribePumpFunCreateStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{2}
}

type SubscribePumpFunWithdrawStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribePumpFunWithdrawStreamRequest) Reset() {
	*x = SubscribePumpFunWithdrawStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribePumpFunWithdrawStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePumpFunWithdrawStreamRequest) ProtoMessage() {}

func (x *SubscribePumpFunWithdrawStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePumpFunWithdrawStreamRequest.ProtoReflect.Descriptor instead.
func (*SubscribePumpFunWithdrawStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{3}
}

type SubscribePumpFunSwapStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribePumpFunSwapStreamRequest) Reset() {
	*x = SubscribePumpFunSwapStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribePumpFunSwapStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePumpFunSwapStreamRequest) ProtoMessage() {}

func (x *SubscribePumpFunSwapStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePumpFunSwapStreamRequest.ProtoReflect.Descriptor instead.
func (*SubscribePumpFunSwapStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{4}
}

type EventMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash    string `protobuf:"bytes,1,opt,name=txHash,proto3" json:"txHash,omitempty"`
	Slot      int64  `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	BlockTime int64  `protobuf:"varint,3,opt,name=blockTime,proto3" json:"blockTime,omitempty"`
	Fee       int64  `protobuf:"varint,4,opt,name=fee,proto3" json:"fee,omitempty"`
	Tip       int64  `protobuf:"varint,5,opt,name=tip,proto3" json:"tip,omitempty"`
	Tag       string `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`
	Balance   int64  `protobuf:"varint,7,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *EventMeta) Reset() {
	*x = EventMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMeta) ProtoMessage() {}

func (x *EventMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMeta.ProtoReflect.Descriptor instead.
func (*EventMeta) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{5}
}

func (x *EventMeta) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *EventMeta) GetSlot() int64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *EventMeta) GetBlockTime() int64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

func (x *EventMeta) GetFee() int64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *EventMeta) GetTip() int64 {
	if x != nil {
		return x.Tip
	}
	return 0
}

func (x *EventMeta) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *EventMeta) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type SubscribePumpFunCreateStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta       *EventMeta  `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	CreateInfo *CreateInfo `protobuf:"bytes,2,opt,name=createInfo,proto3" json:"createInfo,omitempty"`
}

func (x *SubscribePumpFunCreateStreamResponse) Reset() {
	*x = SubscribePumpFunCreateStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribePumpFunCreateStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePumpFunCreateStreamResponse) ProtoMessage() {}

func (x *SubscribePumpFunCreateStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePumpFunCreateStreamResponse.ProtoReflect.Descriptor instead.
func (*SubscribePumpFunCreateStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{6}
}

func (x *SubscribePumpFunCreateStreamResponse) GetMeta() *EventMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *SubscribePumpFunCreateStreamResponse) GetCreateInfo() *CreateInfo {
	if x != nil {
		return x.CreateInfo
	}
	return nil
}

type CreateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Symbol       string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Uri          string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	Mint         string `protobuf:"bytes,4,opt,name=mint,proto3" json:"mint,omitempty"`
	BondingCurve string `protobuf:"bytes,5,opt,name=bondingCurve,proto3" json:"bondingCurve,omitempty"`
	Creator      string `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (x *CreateInfo) Reset() {
	*x = CreateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInfo) ProtoMessage() {}

func (x *CreateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInfo.ProtoReflect.Descriptor instead.
func (*CreateInfo) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{7}
}

func (x *CreateInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateInfo) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CreateInfo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CreateInfo) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *CreateInfo) GetBondingCurve() string {
	if x != nil {
		return x.BondingCurve
	}
	return ""
}

func (x *CreateInfo) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

type SubscribePumpFunWithdrawStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta         *EventMeta    `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	WithdrawInfo *WithdrawInfo `protobuf:"bytes,2,opt,name=withdrawInfo,proto3" json:"withdrawInfo,omitempty"`
}

func (x *SubscribePumpFunWithdrawStreamResponse) Reset() {
	*x = SubscribePumpFunWithdrawStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribePumpFunWithdrawStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePumpFunWithdrawStreamResponse) ProtoMessage() {}

func (x *SubscribePumpFunWithdrawStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePumpFunWithdrawStreamResponse.ProtoReflect.Descriptor instead.
func (*SubscribePumpFunWithdrawStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{8}
}

func (x *SubscribePumpFunWithdrawStreamResponse) GetMeta() *EventMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *SubscribePumpFunWithdrawStreamResponse) GetWithdrawInfo() *WithdrawInfo {
	if x != nil {
		return x.WithdrawInfo
	}
	return nil
}

type WithdrawInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint         string `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
	BondingCurve string `protobuf:"bytes,2,opt,name=bondingCurve,proto3" json:"bondingCurve,omitempty"`
}

func (x *WithdrawInfo) Reset() {
	*x = WithdrawInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawInfo) ProtoMessage() {}

func (x *WithdrawInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawInfo.ProtoReflect.Descriptor instead.
func (*WithdrawInfo) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{9}
}

func (x *WithdrawInfo) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *WithdrawInfo) GetBondingCurve() string {
	if x != nil {
		return x.BondingCurve
	}
	return ""
}

type SubscribePumpFunSwapStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta         *EventMeta       `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	SwapInfo     *PumpFunSwapInfo `protobuf:"bytes,2,opt,name=swapInfo,proto3" json:"swapInfo,omitempty"`
	SwapExtra    *SwapExtra       `protobuf:"bytes,3,opt,name=swapExtra,proto3" json:"swapExtra,omitempty"`
	BalanceExtra *BalanceExtra    `protobuf:"bytes,4,opt,name=balanceExtra,proto3" json:"balanceExtra,omitempty"`
}

func (x *SubscribePumpFunSwapStreamResponse) Reset() {
	*x = SubscribePumpFunSwapStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribePumpFunSwapStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribePumpFunSwapStreamResponse) ProtoMessage() {}

func (x *SubscribePumpFunSwapStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribePumpFunSwapStreamResponse.ProtoReflect.Descriptor instead.
func (*SubscribePumpFunSwapStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{10}
}

func (x *SubscribePumpFunSwapStreamResponse) GetMeta() *EventMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *SubscribePumpFunSwapStreamResponse) GetSwapInfo() *PumpFunSwapInfo {
	if x != nil {
		return x.SwapInfo
	}
	return nil
}

func (x *SubscribePumpFunSwapStreamResponse) GetSwapExtra() *SwapExtra {
	if x != nil {
		return x.SwapExtra
	}
	return nil
}

func (x *SubscribePumpFunSwapStreamResponse) GetBalanceExtra() *BalanceExtra {
	if x != nil {
		return x.BalanceExtra
	}
	return nil
}

type PumpFunSwapInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint                 string `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
	BondingCurve         string `protobuf:"bytes,2,opt,name=bondingCurve,proto3" json:"bondingCurve,omitempty"`
	User                 string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	SolAmount            uint64 `protobuf:"varint,4,opt,name=solAmount,proto3" json:"solAmount,omitempty"`
	TokenAmount          uint64 `protobuf:"varint,5,opt,name=tokenAmount,proto3" json:"tokenAmount,omitempty"`
	IsBuy                bool   `protobuf:"varint,6,opt,name=isBuy,proto3" json:"isBuy,omitempty"`
	Timestamp            int64  `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	VirtualSolReserves   uint64 `protobuf:"varint,8,opt,name=virtualSolReserves,proto3" json:"virtualSolReserves,omitempty"`
	VirtualTokenReserves uint64 `protobuf:"varint,9,opt,name=virtualTokenReserves,proto3" json:"virtualTokenReserves,omitempty"`
}

func (x *PumpFunSwapInfo) Reset() {
	*x = PumpFunSwapInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PumpFunSwapInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PumpFunSwapInfo) ProtoMessage() {}

func (x *PumpFunSwapInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PumpFunSwapInfo.ProtoReflect.Descriptor instead.
func (*PumpFunSwapInfo) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{11}
}

func (x *PumpFunSwapInfo) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *PumpFunSwapInfo) GetBondingCurve() string {
	if x != nil {
		return x.BondingCurve
	}
	return ""
}

func (x *PumpFunSwapInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *PumpFunSwapInfo) GetSolAmount() uint64 {
	if x != nil {
		return x.SolAmount
	}
	return 0
}

func (x *PumpFunSwapInfo) GetTokenAmount() uint64 {
	if x != nil {
		return x.TokenAmount
	}
	return 0
}

func (x *PumpFunSwapInfo) GetIsBuy() bool {
	if x != nil {
		return x.IsBuy
	}
	return false
}

func (x *PumpFunSwapInfo) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PumpFunSwapInfo) GetVirtualSolReserves() uint64 {
	if x != nil {
		return x.VirtualSolReserves
	}
	return 0
}

func (x *PumpFunSwapInfo) GetVirtualTokenReserves() uint64 {
	if x != nil {
		return x.VirtualTokenReserves
	}
	return 0
}

type SwapExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Side          string  `protobuf:"bytes,1,opt,name=side,proto3" json:"side,omitempty"`
	BaseQty       float64 `protobuf:"fixed64,2,opt,name=baseQty,proto3" json:"baseQty,omitempty"`
	QuoteQty      float64 `protobuf:"fixed64,3,opt,name=quoteQty,proto3" json:"quoteQty,omitempty"`
	Price         float64 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`         //priceUSD=price*quoteUSDPrice
	Liquidity     float64 `protobuf:"fixed64,5,opt,name=liquidity,proto3" json:"liquidity,omitempty"` //liquidityUSD=liquidity*quoteUSDPrice
	Cap           float64 `protobuf:"fixed64,6,opt,name=cap,proto3" json:"cap,omitempty"`             //capUSD=cap*quoteUSDPrice
	QuoteUSDPrice float64 `protobuf:"fixed64,7,opt,name=quoteUSDPrice,proto3" json:"quoteUSDPrice,omitempty"`
}

func (x *SwapExtra) Reset() {
	*x = SwapExtra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapExtra) ProtoMessage() {}

func (x *SwapExtra) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapExtra.ProtoReflect.Descriptor instead.
func (*SwapExtra) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{12}
}

func (x *SwapExtra) GetSide() string {
	if x != nil {
		return x.Side
	}
	return ""
}

func (x *SwapExtra) GetBaseQty() float64 {
	if x != nil {
		return x.BaseQty
	}
	return 0
}

func (x *SwapExtra) GetQuoteQty() float64 {
	if x != nil {
		return x.QuoteQty
	}
	return 0
}

func (x *SwapExtra) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SwapExtra) GetLiquidity() float64 {
	if x != nil {
		return x.Liquidity
	}
	return 0
}

func (x *SwapExtra) GetCap() float64 {
	if x != nil {
		return x.Cap
	}
	return 0
}

func (x *SwapExtra) GetQuoteUSDPrice() float64 {
	if x != nil {
		return x.QuoteUSDPrice
	}
	return 0
}

type BalanceExtra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserSolBalance   uint64 `protobuf:"varint,1,opt,name=userSolBalance,proto3" json:"userSolBalance,omitempty"`
	UserBaseBalance  uint64 `protobuf:"varint,2,opt,name=userBaseBalance,proto3" json:"userBaseBalance,omitempty"`
	PoolQuoteBalance uint64 `protobuf:"varint,3,opt,name=poolQuoteBalance,proto3" json:"poolQuoteBalance,omitempty"`
	PoolBaseBalance  uint64 `protobuf:"varint,4,opt,name=poolBaseBalance,proto3" json:"poolBaseBalance,omitempty"`
}

func (x *BalanceExtra) Reset() {
	*x = BalanceExtra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceExtra) ProtoMessage() {}

func (x *BalanceExtra) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceExtra.ProtoReflect.Descriptor instead.
func (*BalanceExtra) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{13}
}

func (x *BalanceExtra) GetUserSolBalance() uint64 {
	if x != nil {
		return x.UserSolBalance
	}
	return 0
}

func (x *BalanceExtra) GetUserBaseBalance() uint64 {
	if x != nil {
		return x.UserBaseBalance
	}
	return 0
}

func (x *BalanceExtra) GetPoolQuoteBalance() uint64 {
	if x != nil {
		return x.PoolQuoteBalance
	}
	return 0
}

func (x *BalanceExtra) GetPoolBaseBalance() uint64 {
	if x != nil {
		return x.PoolBaseBalance
	}
	return 0
}

type PumpFunSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User         string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	BondingCurve string `protobuf:"bytes,2,opt,name=bondingCurve,proto3" json:"bondingCurve,omitempty"`
	TokenIn      string `protobuf:"bytes,3,opt,name=tokenIn,proto3" json:"tokenIn,omitempty"`
	TokenOut     string `protobuf:"bytes,4,opt,name=tokenOut,proto3" json:"tokenOut,omitempty"`
	AmountIn     string `protobuf:"bytes,5,opt,name=amountIn,proto3" json:"amountIn,omitempty"`
	AmountOut    string `protobuf:"bytes,6,opt,name=amountOut,proto3" json:"amountOut,omitempty"`
	CheckAta     bool   `protobuf:"varint,7,opt,name=checkAta,proto3" json:"checkAta,omitempty"`
	Fee          *Fee   `protobuf:"bytes,8,opt,name=fee,proto3,oneof" json:"fee,omitempty"`
}

func (x *PumpFunSwapRequest) Reset() {
	*x = PumpFunSwapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PumpFunSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PumpFunSwapRequest) ProtoMessage() {}

func (x *PumpFunSwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PumpFunSwapRequest.ProtoReflect.Descriptor instead.
func (*PumpFunSwapRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{14}
}

func (x *PumpFunSwapRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *PumpFunSwapRequest) GetBondingCurve() string {
	if x != nil {
		return x.BondingCurve
	}
	return ""
}

func (x *PumpFunSwapRequest) GetTokenIn() string {
	if x != nil {
		return x.TokenIn
	}
	return ""
}

func (x *PumpFunSwapRequest) GetTokenOut() string {
	if x != nil {
		return x.TokenOut
	}
	return ""
}

func (x *PumpFunSwapRequest) GetAmountIn() string {
	if x != nil {
		return x.AmountIn
	}
	return ""
}

func (x *PumpFunSwapRequest) GetAmountOut() string {
	if x != nil {
		return x.AmountOut
	}
	return ""
}

func (x *PumpFunSwapRequest) GetCheckAta() bool {
	if x != nil {
		return x.CheckAta
	}
	return false
}

func (x *PumpFunSwapRequest) GetFee() *Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

type PumpFunSwapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction string `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *PumpFunSwapResponse) Reset() {
	*x = PumpFunSwapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PumpFunSwapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PumpFunSwapResponse) ProtoMessage() {}

func (x *PumpFunSwapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PumpFunSwapResponse.ProtoReflect.Descriptor instead.
func (*PumpFunSwapResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{15}
}

func (x *PumpFunSwapResponse) GetTransaction() string {
	if x != nil {
		return x.Transaction
	}
	return ""
}

// raydium
type SubscribeRaydiumCreateStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeRaydiumCreateStreamRequest) Reset() {
	*x = SubscribeRaydiumCreateStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRaydiumCreateStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRaydiumCreateStreamRequest) ProtoMessage() {}

func (x *SubscribeRaydiumCreateStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRaydiumCreateStreamRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRaydiumCreateStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{16}
}

type SubscribeRaydiumCreateStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta       *EventMeta         `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	CreateInfo *RaydiumCreateInfo `protobuf:"bytes,2,opt,name=createInfo,proto3" json:"createInfo,omitempty"`
}

func (x *SubscribeRaydiumCreateStreamResponse) Reset() {
	*x = SubscribeRaydiumCreateStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRaydiumCreateStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRaydiumCreateStreamResponse) ProtoMessage() {}

func (x *SubscribeRaydiumCreateStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRaydiumCreateStreamResponse.ProtoReflect.Descriptor instead.
func (*SubscribeRaydiumCreateStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{17}
}

func (x *SubscribeRaydiumCreateStreamResponse) GetMeta() *EventMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *SubscribeRaydiumCreateStreamResponse) GetCreateInfo() *RaydiumCreateInfo {
	if x != nil {
		return x.CreateInfo
	}
	return nil
}

type RaydiumCreateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amm                  string `protobuf:"bytes,1,opt,name=amm,proto3" json:"amm,omitempty"`
	CoinMint             string `protobuf:"bytes,2,opt,name=coinMint,proto3" json:"coinMint,omitempty"`
	PcMint               string `protobuf:"bytes,3,opt,name=pcMint,proto3" json:"pcMint,omitempty"`
	PoolCoinTokenAccount string `protobuf:"bytes,4,opt,name=poolCoinTokenAccount,proto3" json:"poolCoinTokenAccount,omitempty"`
	PoolPcTokenAccount   string `protobuf:"bytes,5,opt,name=poolPcTokenAccount,proto3" json:"poolPcTokenAccount,omitempty"`
	User                 string `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`
	BaseMint             string `protobuf:"bytes,7,opt,name=baseMint,proto3" json:"baseMint,omitempty"`
	QuoteMint            string `protobuf:"bytes,8,opt,name=quoteMint,proto3" json:"quoteMint,omitempty"`
	OpenTime             int64  `protobuf:"varint,9,opt,name=openTime,proto3" json:"openTime,omitempty"`
	InitPcAmount         uint64 `protobuf:"varint,10,opt,name=initPcAmount,proto3" json:"initPcAmount,omitempty"`
	InitCoinAmount       uint64 `protobuf:"varint,11,opt,name=initCoinAmount,proto3" json:"initCoinAmount,omitempty"`
}

func (x *RaydiumCreateInfo) Reset() {
	*x = RaydiumCreateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaydiumCreateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaydiumCreateInfo) ProtoMessage() {}

func (x *RaydiumCreateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaydiumCreateInfo.ProtoReflect.Descriptor instead.
func (*RaydiumCreateInfo) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{18}
}

func (x *RaydiumCreateInfo) GetAmm() string {
	if x != nil {
		return x.Amm
	}
	return ""
}

func (x *RaydiumCreateInfo) GetCoinMint() string {
	if x != nil {
		return x.CoinMint
	}
	return ""
}

func (x *RaydiumCreateInfo) GetPcMint() string {
	if x != nil {
		return x.PcMint
	}
	return ""
}

func (x *RaydiumCreateInfo) GetPoolCoinTokenAccount() string {
	if x != nil {
		return x.PoolCoinTokenAccount
	}
	return ""
}

func (x *RaydiumCreateInfo) GetPoolPcTokenAccount() string {
	if x != nil {
		return x.PoolPcTokenAccount
	}
	return ""
}

func (x *RaydiumCreateInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *RaydiumCreateInfo) GetBaseMint() string {
	if x != nil {
		return x.BaseMint
	}
	return ""
}

func (x *RaydiumCreateInfo) GetQuoteMint() string {
	if x != nil {
		return x.QuoteMint
	}
	return ""
}

func (x *RaydiumCreateInfo) GetOpenTime() int64 {
	if x != nil {
		return x.OpenTime
	}
	return 0
}

func (x *RaydiumCreateInfo) GetInitPcAmount() uint64 {
	if x != nil {
		return x.InitPcAmount
	}
	return 0
}

func (x *RaydiumCreateInfo) GetInitCoinAmount() uint64 {
	if x != nil {
		return x.InitCoinAmount
	}
	return 0
}

type SubscribeRaydiumSwapStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeRaydiumSwapStreamRequest) Reset() {
	*x = SubscribeRaydiumSwapStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRaydiumSwapStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRaydiumSwapStreamRequest) ProtoMessage() {}

func (x *SubscribeRaydiumSwapStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRaydiumSwapStreamRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRaydiumSwapStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{19}
}

type SubscribeRaydiumSwapStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta         *EventMeta       `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	SwapInfo     *RaydiumSwapInfo `protobuf:"bytes,2,opt,name=swapInfo,proto3" json:"swapInfo,omitempty"`
	SwapExtra    *SwapExtra       `protobuf:"bytes,3,opt,name=swapExtra,proto3" json:"swapExtra,omitempty"`
	BalanceExtra *BalanceExtra    `protobuf:"bytes,4,opt,name=balanceExtra,proto3" json:"balanceExtra,omitempty"`
}

func (x *SubscribeRaydiumSwapStreamResponse) Reset() {
	*x = SubscribeRaydiumSwapStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRaydiumSwapStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRaydiumSwapStreamResponse) ProtoMessage() {}

func (x *SubscribeRaydiumSwapStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRaydiumSwapStreamResponse.ProtoReflect.Descriptor instead.
func (*SubscribeRaydiumSwapStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{20}
}

func (x *SubscribeRaydiumSwapStreamResponse) GetMeta() *EventMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *SubscribeRaydiumSwapStreamResponse) GetSwapInfo() *RaydiumSwapInfo {
	if x != nil {
		return x.SwapInfo
	}
	return nil
}

func (x *SubscribeRaydiumSwapStreamResponse) GetSwapExtra() *SwapExtra {
	if x != nil {
		return x.SwapExtra
	}
	return nil
}

func (x *SubscribeRaydiumSwapStreamResponse) GetBalanceExtra() *BalanceExtra {
	if x != nil {
		return x.BalanceExtra
	}
	return nil
}

type RaydiumSwapInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amm                  string `protobuf:"bytes,1,opt,name=amm,proto3" json:"amm,omitempty"`
	PoolCoinTokenAccount string `protobuf:"bytes,2,opt,name=poolCoinTokenAccount,proto3" json:"poolCoinTokenAccount,omitempty"`
	PoolPcTokenAccount   string `protobuf:"bytes,3,opt,name=poolPcTokenAccount,proto3" json:"poolPcTokenAccount,omitempty"`
	User                 string `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	BaseMint             string `protobuf:"bytes,5,opt,name=baseMint,proto3" json:"baseMint,omitempty"`
	QuoteMint            string `protobuf:"bytes,6,opt,name=quoteMint,proto3" json:"quoteMint,omitempty"`
	TokenInMint          string `protobuf:"bytes,7,opt,name=tokenInMint,proto3" json:"tokenInMint,omitempty"`
	TokenInDecimals      int32  `protobuf:"varint,8,opt,name=tokenInDecimals,proto3" json:"tokenInDecimals,omitempty"`
	TokenOutMint         string `protobuf:"bytes,9,opt,name=tokenOutMint,proto3" json:"tokenOutMint,omitempty"`
	TokenOutDecimals     int32  `protobuf:"varint,10,opt,name=tokenOutDecimals,proto3" json:"tokenOutDecimals,omitempty"`
	AmountIn             string `protobuf:"bytes,11,opt,name=amountIn,proto3" json:"amountIn,omitempty"`
	AmountOut            string `protobuf:"bytes,12,opt,name=amountOut,proto3" json:"amountOut,omitempty"`
}

func (x *RaydiumSwapInfo) Reset() {
	*x = RaydiumSwapInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaydiumSwapInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaydiumSwapInfo) ProtoMessage() {}

func (x *RaydiumSwapInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaydiumSwapInfo.ProtoReflect.Descriptor instead.
func (*RaydiumSwapInfo) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{21}
}

func (x *RaydiumSwapInfo) GetAmm() string {
	if x != nil {
		return x.Amm
	}
	return ""
}

func (x *RaydiumSwapInfo) GetPoolCoinTokenAccount() string {
	if x != nil {
		return x.PoolCoinTokenAccount
	}
	return ""
}

func (x *RaydiumSwapInfo) GetPoolPcTokenAccount() string {
	if x != nil {
		return x.PoolPcTokenAccount
	}
	return ""
}

func (x *RaydiumSwapInfo) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *RaydiumSwapInfo) GetBaseMint() string {
	if x != nil {
		return x.BaseMint
	}
	return ""
}

func (x *RaydiumSwapInfo) GetQuoteMint() string {
	if x != nil {
		return x.QuoteMint
	}
	return ""
}

func (x *RaydiumSwapInfo) GetTokenInMint() string {
	if x != nil {
		return x.TokenInMint
	}
	return ""
}

func (x *RaydiumSwapInfo) GetTokenInDecimals() int32 {
	if x != nil {
		return x.TokenInDecimals
	}
	return 0
}

func (x *RaydiumSwapInfo) GetTokenOutMint() string {
	if x != nil {
		return x.TokenOutMint
	}
	return ""
}

func (x *RaydiumSwapInfo) GetTokenOutDecimals() int32 {
	if x != nil {
		return x.TokenOutDecimals
	}
	return 0
}

func (x *RaydiumSwapInfo) GetAmountIn() string {
	if x != nil {
		return x.AmountIn
	}
	return ""
}

func (x *RaydiumSwapInfo) GetAmountOut() string {
	if x != nil {
		return x.AmountOut
	}
	return ""
}

type RaydiumSwapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User                 string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Amm                  string `protobuf:"bytes,2,opt,name=amm,proto3" json:"amm,omitempty"`
	PoolCoinTokenAccount string `protobuf:"bytes,3,opt,name=poolCoinTokenAccount,proto3" json:"poolCoinTokenAccount,omitempty"`
	PoolPcTokenAccount   string `protobuf:"bytes,4,opt,name=poolPcTokenAccount,proto3" json:"poolPcTokenAccount,omitempty"`
	TokenIn              string `protobuf:"bytes,5,opt,name=tokenIn,proto3" json:"tokenIn,omitempty"`
	TokenOut             string `protobuf:"bytes,6,opt,name=tokenOut,proto3" json:"tokenOut,omitempty"`
	AmountIn             string `protobuf:"bytes,7,opt,name=amountIn,proto3" json:"amountIn,omitempty"`
	AmountOut            string `protobuf:"bytes,8,opt,name=amountOut,proto3" json:"amountOut,omitempty"`
	CheckAta             bool   `protobuf:"varint,9,opt,name=checkAta,proto3" json:"checkAta,omitempty"`
	Fee                  *Fee   `protobuf:"bytes,10,opt,name=fee,proto3,oneof" json:"fee,omitempty"`
}

func (x *RaydiumSwapRequest) Reset() {
	*x = RaydiumSwapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaydiumSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaydiumSwapRequest) ProtoMessage() {}

func (x *RaydiumSwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaydiumSwapRequest.ProtoReflect.Descriptor instead.
func (*RaydiumSwapRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{22}
}

func (x *RaydiumSwapRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *RaydiumSwapRequest) GetAmm() string {
	if x != nil {
		return x.Amm
	}
	return ""
}

func (x *RaydiumSwapRequest) GetPoolCoinTokenAccount() string {
	if x != nil {
		return x.PoolCoinTokenAccount
	}
	return ""
}

func (x *RaydiumSwapRequest) GetPoolPcTokenAccount() string {
	if x != nil {
		return x.PoolPcTokenAccount
	}
	return ""
}

func (x *RaydiumSwapRequest) GetTokenIn() string {
	if x != nil {
		return x.TokenIn
	}
	return ""
}

func (x *RaydiumSwapRequest) GetTokenOut() string {
	if x != nil {
		return x.TokenOut
	}
	return ""
}

func (x *RaydiumSwapRequest) GetAmountIn() string {
	if x != nil {
		return x.AmountIn
	}
	return ""
}

func (x *RaydiumSwapRequest) GetAmountOut() string {
	if x != nil {
		return x.AmountOut
	}
	return ""
}

func (x *RaydiumSwapRequest) GetCheckAta() bool {
	if x != nil {
		return x.CheckAta
	}
	return false
}

func (x *RaydiumSwapRequest) GetFee() *Fee {
	if x != nil {
		return x.Fee
	}
	return nil
}

type Fee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComputeLimit *uint32 `protobuf:"varint,1,opt,name=computeLimit,proto3,oneof" json:"computeLimit,omitempty"`
	ComputePrice *uint64 `protobuf:"varint,2,opt,name=computePrice,proto3,oneof" json:"computePrice,omitempty"`
	TipAccount   *string `protobuf:"bytes,3,opt,name=tipAccount,proto3,oneof" json:"tipAccount,omitempty"` //jito|bloxroute|nextblock|temporal|(address)
	TipAmount    *uint64 `protobuf:"varint,4,opt,name=tipAmount,proto3,oneof" json:"tipAmount,omitempty"`
}

func (x *Fee) Reset() {
	*x = Fee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fee) ProtoMessage() {}

func (x *Fee) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fee.ProtoReflect.Descriptor instead.
func (*Fee) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{23}
}

func (x *Fee) GetComputeLimit() uint32 {
	if x != nil && x.ComputeLimit != nil {
		return *x.ComputeLimit
	}
	return 0
}

func (x *Fee) GetComputePrice() uint64 {
	if x != nil && x.ComputePrice != nil {
		return *x.ComputePrice
	}
	return 0
}

func (x *Fee) GetTipAccount() string {
	if x != nil && x.TipAccount != nil {
		return *x.TipAccount
	}
	return ""
}

func (x *Fee) GetTipAmount() uint64 {
	if x != nil && x.TipAmount != nil {
		return *x.TipAmount
	}
	return 0
}

type RaydiumSwapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction string `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *RaydiumSwapResponse) Reset() {
	*x = RaydiumSwapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RaydiumSwapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaydiumSwapResponse) ProtoMessage() {}

func (x *RaydiumSwapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaydiumSwapResponse.ProtoReflect.Descriptor instead.
func (*RaydiumSwapResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{24}
}

func (x *RaydiumSwapResponse) GetTransaction() string {
	if x != nil {
		return x.Transaction
	}
	return ""
}

var File_proto_api_proto protoreflect.FileDescriptor

var file_proto_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x22, 0x84, 0x01,
	0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6b,
	0x69, 0x70, 0x50, 0x72, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x50, 0x72, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x22, 0x37, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x25, 0x0a,
	0x23, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x27, 0x0a, 0x25, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x23, 0x0a,
	0x21, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75,
	0x6e, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x65, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x69, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x24, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x36,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x9c, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x43, 0x75, 0x72, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62,
	0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x72, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x91, 0x01, 0x0a, 0x26, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0c, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a, 0x0c, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x72, 0x76, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x72, 0x76,
	0x65, 0x22, 0xfb, 0x01, 0x0a, 0x22, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50,
	0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x08, 0x73, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x09,
	0x73, 0x77, 0x61, 0x70, 0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x77, 0x61,
	0x70, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x09, 0x73, 0x77, 0x61, 0x70, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x12, 0x3c, 0x0a, 0x0c, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x52, 0x0c, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x22,
	0xb5, 0x02, 0x0a, 0x0f, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x43, 0x75, 0x72, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62,
	0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x72, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x73, 0x6f, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x73, 0x42, 0x75, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x73, 0x42, 0x75, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x2e, 0x0a, 0x12, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x6f,
	0x6c, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x12, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x53, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x14, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x09, 0x53, 0x77, 0x61, 0x70,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x73,
	0x65, 0x51, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65,
	0x51, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x51, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x51, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x63, 0x61, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x55, 0x53,
	0x44, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x55, 0x53, 0x44, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x0c,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x26, 0x0a, 0x0e,
	0x75, 0x73, 0x65, 0x72, 0x53, 0x6f, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x53, 0x6f, 0x6c, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x75,
	0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x70, 0x6f, 0x6f, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x70, 0x6f, 0x6f, 0x6c, 0x51, 0x75,
	0x6f, 0x74, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x6f,
	0x6f, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x6f, 0x6f, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x22, 0x88, 0x02, 0x0a, 0x12, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e,
	0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x75, 0x72, 0x76, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x75,
	0x72, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f,
	0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x4f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x74, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x74, 0x61, 0x12,
	0x26, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73,
	0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x46, 0x65, 0x65, 0x48, 0x00, 0x52,
	0x03, 0x66, 0x65, 0x65, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x66, 0x65, 0x65, 0x22,
	0x37, 0x0a, 0x13, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x25, 0x0a, 0x23, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x79, 0x64, 0x69, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x90, 0x01, 0x0a, 0x24, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x79,
	0x64, 0x69, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x52, 0x61, 0x79, 0x64, 0x69, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0xf3, 0x02, 0x0a, 0x11, 0x52, 0x61, 0x79, 0x64, 0x69, 0x75, 0x6d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6d, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x6d, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x69, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x69, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x63, 0x4d, 0x69, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x63, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x14, 0x70, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x6f,
	0x6f, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x63, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x69,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x69,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x69, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6e, 0x69, 0x74, 0x50, 0x63, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x50, 0x63, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x43, 0x6f,
	0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x79, 0x64, 0x69, 0x75, 0x6d, 0x53, 0x77, 0x61, 0x70,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xfb, 0x01,
	0x0a, 0x22, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x79, 0x64, 0x69,
	0x75, 0x6d, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12,
	0x37, 0x0a, 0x08, 0x73, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x52,
	0x61, 0x79, 0x64, 0x69, 0x75, 0x6d, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x73, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x33, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x6f,
	0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x52, 0x09, 0x73, 0x77, 0x61, 0x70, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x3c, 0x0a,
	0x0c, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x0c, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x22, 0xab, 0x03, 0x0a, 0x0f,
	0x52, 0x61, 0x79, 0x64, 0x69, 0x75, 0x6d, 0x53, 0x77, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x6d, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x6d,
	0x6d, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x70, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x63, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x4d, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d, 0x69,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x4d,
	0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x69,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49,
	0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e,
	0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x4d,
	0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x44,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x22, 0xda, 0x02, 0x0a, 0x12, 0x52, 0x61,
	0x79, 0x64, 0x69, 0x75, 0x6d, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6d, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x61, 0x6d, 0x6d, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x6f, 0x6f, 0x6c, 0x43, 0x6f,
	0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x6f, 0x6f, 0x6c, 0x43, 0x6f, 0x69, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x6f,
	0x6f, 0x6c, 0x50, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x63, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4f, 0x75, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x41, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x41, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x46, 0x65, 0x65, 0x48, 0x00, 0x52, 0x03, 0x66, 0x65, 0x65, 0x88, 0x01, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x66, 0x65, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x12, 0x27,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52,
	0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x23, 0x0a, 0x0a, 0x74, 0x69, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x74, 0x69, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x74, 0x69, 0x70, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x03, 0x52, 0x09, 0x74, 0x69, 0x70, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74,
	0x69, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x69,
	0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x37, 0x0a, 0x13, 0x52, 0x61, 0x79, 0x64, 0x69,
	0x75, 0x6d, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x32, 0x9e, 0x07, 0x0a, 0x0a, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12,
	0x5a, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x1c,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2f, 0x2e, 0x73,
	0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x12, 0x89, 0x01, 0x0a, 0x1e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50,
	0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x31, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x75, 0x6d, 0x70, 0x46,
	0x75, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x75,
	0x6d, 0x70, 0x46, 0x75, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x7d, 0x0a,
	0x1a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75,
	0x6e, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2d, 0x2e, 0x73, 0x6f,
	0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x6f, 0x6c,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x4e, 0x0a, 0x0b,
	0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x12, 0x1e, 0x2e, 0x73, 0x6f,
	0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e,
	0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x6f,
	0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x50, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e,
	0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a,
	0x1c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x79, 0x64, 0x69, 0x75,
	0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2f, 0x2e,
	0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x79, 0x64, 0x69, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30,
	0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x79, 0x64, 0x69, 0x75, 0x6d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x30, 0x01, 0x12, 0x7d, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52,
	0x61, 0x79, 0x64, 0x69, 0x75, 0x6d, 0x53, 0x77, 0x61, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x2d, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x79, 0x64, 0x69, 0x75, 0x6d, 0x53, 0x77,
	0x61, 0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x61, 0x79, 0x64, 0x69, 0x75, 0x6d, 0x53, 0x77, 0x61,
	0x70, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30,
	0x01, 0x12, 0x4e, 0x0a, 0x0b, 0x52, 0x61, 0x79, 0x64, 0x69, 0x75, 0x6d, 0x53, 0x77, 0x61, 0x70,
	0x12, 0x1e, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x52, 0x61,
	0x79, 0x64, 0x69, 0x75, 0x6d, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x52, 0x61,
	0x79, 0x64, 0x69, 0x75, 0x6d, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x0e, 0x5a, 0x0c, 0x2e, 0x2f, 0x73, 0x6f, 0x6c, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_api_proto_rawDescOnce sync.Once
	file_proto_api_proto_rawDescData = file_proto_api_proto_rawDesc
)

func file_proto_api_proto_rawDescGZIP() []byte {
	file_proto_api_proto_rawDescOnce.Do(func() {
		file_proto_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_api_proto_rawDescData)
	})
	return file_proto_api_proto_rawDescData
}

var file_proto_api_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_api_proto_goTypes = []interface{}{
	(*SendTransactionRequest)(nil),                 // 0: solgateway.SendTransactionRequest
	(*SendTransactionResponse)(nil),                // 1: solgateway.SendTransactionResponse
	(*SubscribePumpFunCreateStreamRequest)(nil),    // 2: solgateway.SubscribePumpFunCreateStreamRequest
	(*SubscribePumpFunWithdrawStreamRequest)(nil),  // 3: solgateway.SubscribePumpFunWithdrawStreamRequest
	(*SubscribePumpFunSwapStreamRequest)(nil),      // 4: solgateway.SubscribePumpFunSwapStreamRequest
	(*EventMeta)(nil),                              // 5: solgateway.EventMeta
	(*SubscribePumpFunCreateStreamResponse)(nil),   // 6: solgateway.SubscribePumpFunCreateStreamResponse
	(*CreateInfo)(nil),                             // 7: solgateway.CreateInfo
	(*SubscribePumpFunWithdrawStreamResponse)(nil), // 8: solgateway.SubscribePumpFunWithdrawStreamResponse
	(*WithdrawInfo)(nil),                           // 9: solgateway.WithdrawInfo
	(*SubscribePumpFunSwapStreamResponse)(nil),     // 10: solgateway.SubscribePumpFunSwapStreamResponse
	(*PumpFunSwapInfo)(nil),                        // 11: solgateway.PumpFunSwapInfo
	(*SwapExtra)(nil),                              // 12: solgateway.SwapExtra
	(*BalanceExtra)(nil),                           // 13: solgateway.BalanceExtra
	(*PumpFunSwapRequest)(nil),                     // 14: solgateway.PumpFunSwapRequest
	(*PumpFunSwapResponse)(nil),                    // 15: solgateway.PumpFunSwapResponse
	(*SubscribeRaydiumCreateStreamRequest)(nil),    // 16: solgateway.SubscribeRaydiumCreateStreamRequest
	(*SubscribeRaydiumCreateStreamResponse)(nil),   // 17: solgateway.SubscribeRaydiumCreateStreamResponse
	(*RaydiumCreateInfo)(nil),                      // 18: solgateway.RaydiumCreateInfo
	(*SubscribeRaydiumSwapStreamRequest)(nil),      // 19: solgateway.SubscribeRaydiumSwapStreamRequest
	(*SubscribeRaydiumSwapStreamResponse)(nil),     // 20: solgateway.SubscribeRaydiumSwapStreamResponse
	(*RaydiumSwapInfo)(nil),                        // 21: solgateway.RaydiumSwapInfo
	(*RaydiumSwapRequest)(nil),                     // 22: solgateway.RaydiumSwapRequest
	(*Fee)(nil),                                    // 23: solgateway.Fee
	(*RaydiumSwapResponse)(nil),                    // 24: solgateway.RaydiumSwapResponse
}
var file_proto_api_proto_depIdxs = []int32{
	5,  // 0: solgateway.SubscribePumpFunCreateStreamResponse.meta:type_name -> solgateway.EventMeta
	7,  // 1: solgateway.SubscribePumpFunCreateStreamResponse.createInfo:type_name -> solgateway.CreateInfo
	5,  // 2: solgateway.SubscribePumpFunWithdrawStreamResponse.meta:type_name -> solgateway.EventMeta
	9,  // 3: solgateway.SubscribePumpFunWithdrawStreamResponse.withdrawInfo:type_name -> solgateway.WithdrawInfo
	5,  // 4: solgateway.SubscribePumpFunSwapStreamResponse.meta:type_name -> solgateway.EventMeta
	11, // 5: solgateway.SubscribePumpFunSwapStreamResponse.swapInfo:type_name -> solgateway.PumpFunSwapInfo
	12, // 6: solgateway.SubscribePumpFunSwapStreamResponse.swapExtra:type_name -> solgateway.SwapExtra
	13, // 7: solgateway.SubscribePumpFunSwapStreamResponse.balanceExtra:type_name -> solgateway.BalanceExtra
	23, // 8: solgateway.PumpFunSwapRequest.fee:type_name -> solgateway.Fee
	5,  // 9: solgateway.SubscribeRaydiumCreateStreamResponse.meta:type_name -> solgateway.EventMeta
	18, // 10: solgateway.SubscribeRaydiumCreateStreamResponse.createInfo:type_name -> solgateway.RaydiumCreateInfo
	5,  // 11: solgateway.SubscribeRaydiumSwapStreamResponse.meta:type_name -> solgateway.EventMeta
	21, // 12: solgateway.SubscribeRaydiumSwapStreamResponse.swapInfo:type_name -> solgateway.RaydiumSwapInfo
	12, // 13: solgateway.SubscribeRaydiumSwapStreamResponse.swapExtra:type_name -> solgateway.SwapExtra
	13, // 14: solgateway.SubscribeRaydiumSwapStreamResponse.balanceExtra:type_name -> solgateway.BalanceExtra
	23, // 15: solgateway.RaydiumSwapRequest.fee:type_name -> solgateway.Fee
	0,  // 16: solgateway.solgateway.SendTransaction:input_type -> solgateway.SendTransactionRequest
	2,  // 17: solgateway.solgateway.SubscribePumpFunCreateStream:input_type -> solgateway.SubscribePumpFunCreateStreamRequest
	3,  // 18: solgateway.solgateway.SubscribePumpFunWithdrawStream:input_type -> solgateway.SubscribePumpFunWithdrawStreamRequest
	4,  // 19: solgateway.solgateway.SubscribePumpFunSwapStream:input_type -> solgateway.SubscribePumpFunSwapStreamRequest
	14, // 20: solgateway.solgateway.PumpFunSwap:input_type -> solgateway.PumpFunSwapRequest
	16, // 21: solgateway.solgateway.SubscribeRaydiumCreateStream:input_type -> solgateway.SubscribeRaydiumCreateStreamRequest
	19, // 22: solgateway.solgateway.SubscribeRaydiumSwapStream:input_type -> solgateway.SubscribeRaydiumSwapStreamRequest
	22, // 23: solgateway.solgateway.RaydiumSwap:input_type -> solgateway.RaydiumSwapRequest
	1,  // 24: solgateway.solgateway.SendTransaction:output_type -> solgateway.SendTransactionResponse
	6,  // 25: solgateway.solgateway.SubscribePumpFunCreateStream:output_type -> solgateway.SubscribePumpFunCreateStreamResponse
	8,  // 26: solgateway.solgateway.SubscribePumpFunWithdrawStream:output_type -> solgateway.SubscribePumpFunWithdrawStreamResponse
	10, // 27: solgateway.solgateway.SubscribePumpFunSwapStream:output_type -> solgateway.SubscribePumpFunSwapStreamResponse
	15, // 28: solgateway.solgateway.PumpFunSwap:output_type -> solgateway.PumpFunSwapResponse
	17, // 29: solgateway.solgateway.SubscribeRaydiumCreateStream:output_type -> solgateway.SubscribeRaydiumCreateStreamResponse
	20, // 30: solgateway.solgateway.SubscribeRaydiumSwapStream:output_type -> solgateway.SubscribeRaydiumSwapStreamResponse
	24, // 31: solgateway.solgateway.RaydiumSwap:output_type -> solgateway.RaydiumSwapResponse
	24, // [24:32] is the sub-list for method output_type
	16, // [16:24] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_proto_api_proto_init() }
func file_proto_api_proto_init() {
	if File_proto_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribePumpFunCreateStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribePumpFunWithdrawStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribePumpFunSwapStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribePumpFunCreateStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribePumpFunWithdrawStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribePumpFunSwapStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PumpFunSwapInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapExtra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceExtra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PumpFunSwapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PumpFunSwapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRaydiumCreateStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRaydiumCreateStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaydiumCreateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRaydiumSwapStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRaydiumSwapStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaydiumSwapInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaydiumSwapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RaydiumSwapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_api_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_proto_api_proto_msgTypes[22].OneofWrappers = []interface{}{}
	file_proto_api_proto_msgTypes[23].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_api_proto_goTypes,
		DependencyIndexes: file_proto_api_proto_depIdxs,
		MessageInfos:      file_proto_api_proto_msgTypes,
	}.Build()
	File_proto_api_proto = out.File
	file_proto_api_proto_rawDesc = nil
	file_proto_api_proto_goTypes = nil
	file_proto_api_proto_depIdxs = nil
}
